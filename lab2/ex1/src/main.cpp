#include "main.h"
int main() {
    FibonacciHeap* H1 = new FibonacciHeap, * H2 = new FibonacciHeap, * H3 = new FibonacciHeap, * H4 = new FibonacciHeap, * H5;
    int o[10];
step1:start(o);
    getFromFile(H1, 50);getFromFile(H2, 100);getFromFile(H3, 150);getFromFile(H4, 200);
step2:next(false,false);
    o[0] = H1->Insert(node(249));
    o[1] = H1->Insert(node(830));
    o[2] = H1->Minimum();
    o[3] = H1->Delete(node(127));
    o[4] = H1->Delete(node(141));
    o[5] = H1->Minimum();
    o[6] = H1->DecreaseKey(node(75), 61);
    o[7] = H1->DecreaseKey(node(198), 169);
    o[8] = H1->ExtractMin()->key;
    o[9] = H1->ExtractMin()->key;
step3:next(true, true);
    o[0] = H2->Insert(node(816));
    o[1] = H2->Minimum();
    o[2] = H2->Insert(node(345));
    o[3] = H2->ExtractMin()->key;
    o[4] = H2->Delete(node(504));
    o[5] = H2->Delete(node(203));
    o[6] = H2->DecreaseKey(node(296), 87);
    o[7] = H2->DecreaseKey(node(278), 258);
    o[8] = H2->Minimum();
    o[9] = H2->ExtractMin()->key;
step4:next(true, true);
    o[0] = H3->ExtractMin()->key;
    o[1] = H3->Minimum();
    o[2] = H3->Insert(node(262));
    o[3] = H3->ExtractMin()->key;
    o[4] = H3->Insert(node(832));
    o[5] = H3->Minimum();
    o[6] = H3->Delete(node(134));
    o[7] = H3->Delete(node(177));
    o[8] = H3->DecreaseKey(node(617), 360);
    o[9] = H3->DecreaseKey(node(889), 353);
step5:next(true, true);
    o[0] = H4->Minimum();
    o[1] = H4->Delete(node(708));
    o[2] = H4->Insert(node(281));
    o[3] = H4->Insert(node(347));
    o[4] = H4->Minimum();
    o[5] = H4->Delete(node(415));
    o[6] = H4->ExtractMin()->key;
    o[7] = H4->DecreaseKey(node(620), 354);
    o[8] = H4->DecreaseKey(node(410), 80);
    o[9] = H4->ExtractMin()->key;
step6:next(true, true);
    H5 = H1;
    H5->Union(H2);
    H5->Union(H3);
    H5->Union(H4);
step7:next(false,false);
    o[0] = H5->ExtractMin()->key;
    o[1] = H5->Minimum();
    o[2] = H5->Delete(node(800));
    o[3] = H5->Insert(node(267));
    o[4] = H5->Insert(node(351));
    o[5] = H5->ExtractMin()->key;
    o[6] = H5->DecreaseKey(node(478), 444);
    o[7] = H5->DecreaseKey(node(559), 456);
    o[8] = H5->Minimum();
    o[9] = H5->Delete(node(929));
end:next(true, true);end();
    return 0;
}